/**
 * Depending on your platform, the user settings file is located here:
 *     Windows %APPDATA%\Code\User\settings.json
 *     macOS $HOME/Library/Application Support/Code/User/settings.json
 *     Linux $HOME/.config/Code/User/settings.json
 */
{
  /**
   * General
   */
  /* Editor config */
  "editor.fontSize": 18,
  "editor.linkedEditing": true,
  "editor.renderControlCharacters": true,
  "editor.renderWhitespace": "selection",
  "editor.inlineSuggest.enabled": true,
  // "editor.formatOnSaveMode": "modificationsIfAvailable",
  "editor.accessibilitySupport": "off",
  "editor.experimental.asyncTokenization": true,
  "editor.guides.bracketPairs": true,
  "editor.minimap.size": "fill",
  "editor.unicodeHighlight.allowedLocales": {
    "zh-hans": true,
    "zh-hant": true
  },
  "editor.quickSuggestions": {
    // "other": "on",
    // "comments": "off",
    "strings": "on"
  },
  "diffEditor.experimental.showMoves": true,
  "diffEditor.ignoreTrimWhitespace": false,
  // "git.autorefresh": true,
  "git.confirmSync": false,
  "git.openRepositoryInParentFolders": "never",
  "remote.autoForwardPorts": false,
  // "markdown.editor.pasteUrlAsFormattedLink.enabled": true,
  /* Terminal config */
  "terminal.integrated.inheritEnv": false,
  "terminal.integrated.fontFamily": "'MesloLGS NF', Monaco, monospace",
  /* Apperance */
  "window.zoomLevel": 1,
  "window.nativeTabs": false,
  "window.titleBarStyle": "custom",
  "window.commandCenter": false,
  "workbench.fontAliasing": "antialiased",
  /* Files behavior */
  "explorer.fileNesting.enabled": true,
  "files.eol": "\n",
  "files.trimTrailingWhitespace": true,
  "files.associations": {
    "*.css": "tailwindcss"
  },
  // Notes:
  // visual-studio-code-is-unable-to-watch-for-file-changes-in-this-large-workspace-error-enospc
  // https://code.visualstudio.com/docs/setup/linux
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/.git": true,
    "**/node_modules/**": true,
    "**/.bloop": true,
    "**/.metals": true,
    "**/.ammonite": true,
    "**/target": true,
    "**/.venv": true,
    "**/.conda-venv": true,
    "**/*venv*": true,
    "**/.*_cache": true
  },
  "search.exclude": {
    "**/.git": true,
    // Node.js
    "**/.pnpm": true,
    "**/node_modules": true,
    "**/package-lock.json": true,
    "**/pnpm-lock.yaml": true,
    "**/yarn.lock": true,
    // Scala
    "**/.bloop": true,
    "**/.metals": true,
    "**/.ammonite": true,
    "**/target": true,
    // Python
    "**/.venv": true,
    "**/.conda-venv": true,
    "**/*venv*": true,
    "**/.*_cache": true // `.mypy_cache`, `.pytest_cache`
  },
  // "explorer.experimental.fileNesting.enabled": true,
  /* Task */
  // If the Tasks: Run Task command is slow,
  // disabling auto detect for task providers may help.
  "task.autoDetect": "off",
  /* Extensions */
  "extensions.ignoreRecommendations": true,

  /**
   * Language specific settings
   */
  /* markup language */
  "[markdown]": {
    "editor.indentSize": 2,
    "editor.autoIndent": "advanced",
    "editor.detectIndentation": true,
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 80,
    "editor.renderWhitespace": "boundary",
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "files.trimTrailingWhitespace": false
  },
  "mdx.experimentalLanguageServer": true,
  "prettier.proseWrap": "preserve",
  "[html][css]": {
    "editor.indentSize": 2,
    "editor.formatOnSave": false,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "tailwindCSS.experimental.classRegex": [
    // https://github.com/lukeed/clsx?tab=readme-ov-file#tailwind-support
    ["clsx\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"],
    // https://cva.style/docs/getting-started/installation#intellisense
    ["cva\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
    ["cx\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"],
    // https://www.tailwind-variants.org/docs/getting-started#intellisense-setup-optional
    ["([\"'`][^\"'`]*.*?[\"'`])", "[\"'`]([^\"'`]*).*?[\"'`]"],
    // config for shadcn utils
    ["cn\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"]
  ],
  "[json][jsonc]": {
    "editor.autoIndent": "advanced",
    "editor.indentSize": 2,
    "editor.formatOnSave": false,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[yaml]": {
    "editor.autoIndent": "advanced",
    "editor.indentSize": 2,
    "editor.formatOnSave": false,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[toml]": {
    "editor.indentSize": 2,
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "tamasfe.even-better-toml"
  },
  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },
  /* Haskell */
  // "[haskell]": {
  //   "editor.fontFamily": "'Fira Code', 'Cascadia Code', monospace",
  //   "editor.fontLigatures": "'ss03', 'ss05', 'zero'",
  //   "editor.defaultFormatter": "haskell.haskell"
  // },
  // "haskell.formattingProvider": "stylish-haskell",
  /* C/Cpp */
  // // C++ format style
  // // http://clang.llvm.org/docs/ClangFormatStyleOptions.html
  // "C_Cpp.clang_format_fallbackStyle": "{BasedOnStyle: LLVM, IndentWidth: 4, MaxEmptyLinesToKeep: 2}",
  "[c][cpp]": {
    "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd"
  },
  "cmake.configureOnOpen": false,
  "cmake.configureOnEdit": false,
  "cmake.options.statusBarVisibility": "compact",
  /* Python */
  "python.languageServer": "Pylance",
  "python.analysis.typeCheckingMode": "basic",
  "python.analysis.inlayHints.variableTypes": false,
  "python.analysis.inlayHints.callArgumentNames": "off",
  "python.analysis.inlayHints.functionReturnTypes": true,
  "python.analysis.inlayHints.pytestParameters": true,
  "python.analysis.autoFormatStrings": true,
  "python.createEnvironment.contentButton": "hide",
  "python.experiments.enabled": true,
  /**
   * // Deprecated settings
   * "python.formatting.provider": "yapf",
   * "python.formatting.yapfArgs": [
   *   "--style",
   *   "{based_on_style: pep8, indent_width: 4, indent_dictionary_value: true, coalesce_brackets: false, split_before_dot: true}"
   * ],
   * "python.linting.mypyEnabled": true,
   * "python.linting.mypyArgs": [
   *   "--show-error-context",
   *   "--show-column-numbers",
   *   "--show-error-codes",
   *   "--no-pretty",
   *   "--no-color-output"
   * ],
   */
  "python.testing.unittestEnabled": false,
  "python.testing.pytestEnabled": true,
  "[python]": {
    "editor.rulers": [79, 120],
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit"
    }
    // "github.copilot.editor.enableCodeActions": false
  },
  // Standalone extenstions for Python
  // "black-formatter.args": ["--line-length", "79"],
  // "flake8.args": ["--ignore", "E203,E501,W503,W504"],
  "isort.check": true,
  "isort.args": ["--profile", "black"],
  "isort.serverEnabled": true,
  "ruff.organizeImports": false,
  "ruff.lint.args": ["--ignore", "C408"],
  "mypy-type-checker.args": [
    "--check-untyped-defs",
    "--follow-imports=silent", // default
    "--ignore-missing-imports", // default
    "--no-pretty", // default
    "--show-column-numbers",
    // "--show-error-context",
    "--show-error-codes"
  ],
  "notebook.lineNumbers": "on",
  "autoDocstring.docstringFormat": "google",
  /* Rust */
  // "rust-analyzer.checkOnSave.command": "clippy",
  /* Scala */
  "[scala]": {
    "editor.indentSize": 2,
    "editor.rulers": [80, 100],
    "editor.defaultFormatter": "scalameta.metals",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true
  },
  // "metals.enableIndentOnPaste": true,
  "metals.enableSemanticHighlighting": true,
  "metals.showInferredType": "false",
  "metals.showImplicitArguments": false,
  "metals.showImplicitConversionsAndClasses": true,
  /* Javascript/Typescript */
  "prettier.semi": false,
  "typescript.format.enable": false,
  "typescript.format.semicolons": "remove",
  "typescript.preferences.quoteStyle": "single",
  "typescript.preferences.preferTypeOnlyAutoImports": true,
  "typescript.preferences.useAliasesForRenames": false,
  "typescript.suggest.completeFunctionCalls": true,
  "typescript.implementationsCodeLens.enabled": true,
  "typescript.tsserver.experimental.enableProjectDiagnostics": true,
  "[javascript][typescript][javascriptreact][typescriptreact]": {
    "editor.indentSize": 2,
    "editor.tabSize": 2,
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    // You can also set `editor.codeActionsOnSave` to an array of Code Actions to execute in order.
    "editor.codeActionsOnSave": {
      "source.convertImportFormat": "always",
      "source.removeUnusedImports": "never",
      "source.sortImports": "always",
      // `organizeImports` is not the same thing as `sortImports`.
      "source.organizeImports": "never"
    }
  },
  "svelte.enable-ts-plugin": true,
  "[svelte]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "svelte.svelte-vscode"
  },
  /* SQL */
  "[sql]": {
    "editor.defaultFormatter": "inferrinizzard.prettier-sql-vscode"
  },
  "Prettier-SQL.commaPosition": "before",
  "Prettier-SQL.tabSizeOverride": 2,
  "Prettier-SQL.linesBetweenQueries": 2,
  "Prettier-SQL.SQLFlavourOverride": "postgresql",
  /* Typst */
  "typst-lsp.experimentalFormatterMode": "on",
  "typst-lsp.exportPdf": "never",
  "[typst]": {
    "editor.defaultFormatter": "nvarner.typst-lsp"
  },
  /* Others */
  "[ansible]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[mongodb]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "shellformat.flag": "-bn -ci -sr -kp",
  "indentRainbow.updateDelay": 250,
  "indentRainbow.indicatorStyle": "classic",
  // disable built-in indentation guide to avoid conflict to indentRainbow plugin
  // "editor.guides.indentation": false,
  // "indentRainbow.lightIndicatorStyleLineWidth": 1,

  /**
   * Misc
   */
  "github.copilot.editor.enableAutoCompletions": true,
  "github.copilot.enable": {
    "*": true,
    "plaintext": true,
    "markdown": true,
    "yaml": true
  },
  /* Telemetry */
  "telemetry.telemetryLevel": "off",
  "redhat.telemetry.enabled": false,
  "dotnetAcquisitionExtension.enableTelemetry": false,
  "docker-explorer.enableTelemetry": false,
  "terraform.telemetry.enabled": false,
  "mdb.sendTelemetry": false,
  "prisma.showPrismaDataPlatformNotification": false
}
